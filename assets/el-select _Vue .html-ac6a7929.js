import{_ as p,r as o,o as u,c as i,e as l,a,b as s,d as e}from"./app-273c6a11.js";const r={},c={href:"https://element.eleme.io/#/zh-CN/component/select",target:"_blank",rel:"noopener noreferrer"},d={href:"http://t.csdnimg.cn/LXXFt",target:"_blank",rel:"noopener noreferrer"},k={href:"http://t.csdnimg.cn/n8dAs",target:"_blank",rel:"noopener noreferrer"};function m(v,n){const t=o("ExternalLinkIcon");return u(),i("div",null,[n[12]||(n[12]=l(`<h1 id="vue中element-ui组件扩展" tabindex="-1"><a class="header-anchor" href="#vue中element-ui组件扩展" aria-hidden="true">#</a> Vue中Element UI组件扩展</h1><h2 id="_1-可自定义输入的可搜索下拉框实现" tabindex="-1"><a class="header-anchor" href="#_1-可自定义输入的可搜索下拉框实现" aria-hidden="true">#</a> 1. 可自定义输入的可搜索下拉框实现</h2><p>通过 Vue 和 Element UI 的 <code>el-select</code> 组件实现可自定义输入的可搜索下拉框。</p><h3 id="_1-1-实现方法" tabindex="-1"><a class="header-anchor" href="#_1-1-实现方法" aria-hidden="true">#</a> 1.1 实现方法</h3><ul><li>使用 <code>el-select</code> 标签。</li><li>配置 <code>filterable</code> 属性以启用搜索功能。</li><li>添加 <code>allow-create</code> 属性允许用户创建新条目。</li><li>绑定 <code>blur</code> 事件以处理用户输入。</li></ul><h3 id="_1-2-代码示例" tabindex="-1"><a class="header-anchor" href="#_1-2-代码示例" aria-hidden="true">#</a> 1.2 代码示例</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>firstClsf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>firstClsf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>100%</span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>caseList.firstClsf<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">allow-create</span>
    <span class="token attr-name">clearable</span>
    <span class="token attr-name">filterable</span>
    <span class="token attr-name">@blur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectBlur<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span>
      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in firstClsfGroups<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.groupName<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-事件处理" tabindex="-1"><a class="header-anchor" href="#_1-3-事件处理" aria-hidden="true">#</a> 1.3 事件处理</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">selectBlur</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>searchForm<span class="token punctuation">.</span>fileExt <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),a("ul",null,[a("li",null,[n[1]||(n[1]=a("strong",null,"参考链接",-1)),n[2]||(n[2]=s("：")),a("a",c,[n[0]||(n[0]=s("Element UI 官方文档 - el-select")),e(t)])])]),n[13]||(n[13]=a("h2",{id:"_2-可编辑的表格",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-可编辑的表格","aria-hidden":"true"},"#"),s(" 2. 可编辑的表格")],-1)),n[14]||(n[14]=a("p",null,"可编辑表格允许用户直接在表格单元格中进行数据的编辑、添加和删除操作。这种表格通常用于数据管理场景，例如用户信息管理、订单管理等。",-1)),a("ul",null,[n[6]||(n[6]=l("<li><p><strong>技术实现</strong>：使用 Vue.js 和 Element UI 的 <code>el-table</code> 组件。</p></li><li><p><strong>功能特点</strong>：</p><ul><li>单元格内直接编辑数据。</li><li>动态添加和删除行。</li><li>支持多种输入类型（如文本、日期选择器等）。</li></ul></li>",2)),a("li",null,[a("p",null,[n[4]||(n[4]=a("strong",null,"参考链接",-1)),n[5]||(n[5]=s("：")),a("a",d,[n[3]||(n[3]=s("可编辑的表格实现")),e(t)])])])]),n[15]||(n[15]=a("h2",{id:"_3-动态嵌套表单验证",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_3-动态嵌套表单验证","aria-hidden":"true"},"#"),s(" 3. 动态嵌套表单验证")],-1)),n[16]||(n[16]=a("p",null,"动态嵌套表单验证是指在表单中嵌套多个子表单，并且这些子表单的验证规则可以根据用户操作动态变化。这种功能在复杂表单场景中非常有用，例如多级表单、动态添加表单项等。",-1)),a("ul",null,[n[10]||(n[10]=a("li",null,[a("p",null,[a("strong",null,"技术实现"),s("：使用 Vue.js 和 Element UI 的表单验证功能。")])],-1)),n[11]||(n[11]=a("li",null,[a("p",null,[a("strong",null,"功能特点"),s("：")]),a("ul",null,[a("li",null,"动态添加和删除表单项。"),a("li",null,"每个表单项支持独立的验证规则。"),a("li",null,"实时反馈验证结果。")])],-1)),a("li",null,[a("p",null,[n[8]||(n[8]=a("strong",null,"参考链接",-1)),n[9]||(n[9]=s("：")),a("a",k,[n[7]||(n[7]=s("动态嵌套表单验证实现")),e(t)])])])]),n[17]||(n[17]=a("hr",null,null,-1))])}const b=p(r,[["render",m],["__file","el-select _Vue .html.vue"]]);export{b as default};
